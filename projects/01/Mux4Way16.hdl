// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl
/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */
CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];
    
    PARTS:
    Mux(a = a[0], b = b[0], sel = sel[0], out = outMuxab0);
    Mux(a = c[0], b = d[0], sel = sel[0], out = outMuxcd0);
    Mux(a = outMuxab0, b = outMuxcd0, sel = sel[1], out = out[0]);
    Mux(a = a[1], b = b[1], sel = sel[0], out = outMuxab1);
    Mux(a = c[1], b = d[1], sel = sel[0], out = outMuxcd1);
    Mux(a = outMuxab1, b = outMuxcd1, sel = sel[1], out = out[1]);
    Mux(a = a[2], b = b[2], sel = sel[0], out = outMuxab2);
    Mux(a = c[2], b = d[2], sel = sel[0], out = outMuxcd2);
    Mux(a = outMuxab2, b = outMuxcd2, sel = sel[1], out = out[2]);
    Mux(a = a[3], b = b[3], sel = sel[0], out = outMuxab3);
    Mux(a = c[3], b = d[3], sel = sel[0], out = outMuxcd3);
    Mux(a = outMuxab3, b = outMuxcd3, sel = sel[1], out = out[3]);
    Mux(a = a[4], b = b[4], sel = sel[0], out = outMuxab4);
    Mux(a = c[4], b = d[4], sel = sel[0], out = outMuxcd4);
    Mux(a = outMuxab4, b = outMuxcd4, sel = sel[1], out = out[4]);
    Mux(a = a[5], b = b[5], sel = sel[0], out = outMuxab5);
    Mux(a = c[5], b = d[5], sel = sel[0], out = outMuxcd5);
    Mux(a = outMuxab5, b = outMuxcd5, sel = sel[1], out = out[5]);
    Mux(a = a[6], b = b[6], sel = sel[0], out = outMuxab6);
    Mux(a = c[6], b = d[6], sel = sel[0], out = outMuxcd6);
    Mux(a = outMuxab6, b = outMuxcd6, sel = sel[1], out = out[6]);
    Mux(a = a[7], b = b[7], sel = sel[0], out = outMuxab7);
    Mux(a = c[7], b = d[7], sel = sel[0], out = outMuxcd7);
    Mux(a = outMuxab7, b = outMuxcd7, sel = sel[1], out = out[7]);
    Mux(a = a[8], b = b[8], sel = sel[0], out = outMuxab8);
    Mux(a = c[8], b = d[8], sel = sel[0], out = outMuxcd8);
    Mux(a = outMuxab8, b = outMuxcd8, sel = sel[1], out = out[8]);
    Mux(a = a[9], b = b[9], sel = sel[0], out = outMuxab9);
    Mux(a = c[9], b = d[9], sel = sel[0], out = outMuxcd9);
    Mux(a = outMuxab9, b = outMuxcd9, sel = sel[1], out = out[9]);
    Mux(a = a[10], b = b[10], sel = sel[0], out = outMuxab10);
    Mux(a = c[10], b = d[10], sel = sel[0], out = outMuxcd10);
    Mux(a = outMuxab10, b = outMuxcd10, sel = sel[1], out = out[10]);
    Mux(a = a[11], b = b[11], sel = sel[0], out = outMuxab11);
    Mux(a = c[11], b = d[11], sel = sel[0], out = outMuxcd11);
    Mux(a = outMuxab11, b = outMuxcd11, sel = sel[1], out = out[11]);
    Mux(a = a[12], b = b[12], sel = sel[0], out = outMuxab12);
    Mux(a = c[12], b = d[12], sel = sel[0], out = outMuxcd12);
    Mux(a = outMuxab12, b = outMuxcd12, sel = sel[1], out = out[12]);
    Mux(a = a[13], b = b[13], sel = sel[0], out = outMuxab13);
    Mux(a = c[13], b = d[13], sel = sel[0], out = outMuxcd13);
    Mux(a = outMuxab13, b = outMuxcd13, sel = sel[1], out = out[13]);
    Mux(a = a[14], b = b[14], sel = sel[0], out = outMuxab14);
    Mux(a = c[14], b = d[14], sel = sel[0], out = outMuxcd14);
    Mux(a = outMuxab14, b = outMuxcd14, sel = sel[1], out = out[14]);
    Mux(a = a[15], b = b[15], sel = sel[0], out = outMuxab15);
    Mux(a = c[15], b = d[15], sel = sel[0], out = outMuxcd15);
    Mux(a = outMuxab15, b = outMuxcd15, sel = sel[1], out = out[15]);    
}