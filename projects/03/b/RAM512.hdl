// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM512.hdl
/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[6..8], a = loadA, b = loadB, c = loadC, d = loadD, e = loadE, f = loadF, g = loadG, h = loadH);
    RAM64(in = in, load = loadA, address = address[0..5], out = outRAM64A);
    RAM64(in = in, load = loadB, address = address[0..5], out = outRAM64B);
    RAM64(in = in, load = loadC, address = address[0..5], out = outRAM64C);
    RAM64(in = in, load = loadD, address = address[0..5], out = outRAM64D);
    RAM64(in = in, load = loadE, address = address[0..5], out = outRAM64E);
    RAM64(in = in, load = loadF, address = address[0..5], out = outRAM64F);
    RAM64(in = in, load = loadG, address = address[0..5], out = outRAM64G);
    RAM64(in = in, load = loadH, address = address[0..5], out = outRAM64H);
    Mux8Way16(a = outRAM64A, b = outRAM64B, c = outRAM64C, d = outRAM64D, e = outRAM64E, f = outRAM64F, g = outRAM64G, h = outRAM64H, sel = address[6..8], out = out);
}
