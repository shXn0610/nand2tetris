// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl
/**
 * 16-bit register:
 * If load is asserted, the register's value is set to in;
 * Otherwise, the register maintains its current value.
 * out(t+1) = (load(t), in(t), out(t))
 */
CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    Mux(a = inPrev0, b = in[0], sel = load, out = outMux0);
    Mux(a = inPrev1, b = in[1], sel = load, out = outMux1);
    Mux(a = inPrev2, b = in[2], sel = load, out = outMux2);
    Mux(a = inPrev3, b = in[3], sel = load, out = outMux3);
    Mux(a = inPrev4, b = in[4], sel = load, out = outMux4);
    Mux(a = inPrev5, b = in[5], sel = load, out = outMux5);
    Mux(a = inPrev6, b = in[6], sel = load, out = outMux6);
    Mux(a = inPrev7, b = in[7], sel = load, out = outMux7);
    Mux(a = inPrev8, b = in[8], sel = load, out = outMux8);
    Mux(a = inPrev9, b = in[9], sel = load, out = outMux9);
    Mux(a = inPrev10, b = in[10], sel = load, out = outMux10);
    Mux(a = inPrev11, b = in[11], sel = load, out = outMux11);
    Mux(a = inPrev12, b = in[12], sel = load, out = outMux12);
    Mux(a = inPrev13, b = in[13], sel = load, out = outMux13);
    Mux(a = inPrev14, b = in[14], sel = load, out = outMux14);
    Mux(a = inPrev15, b = in[15], sel = load, out = outMux15);
    
    DFF(in = outMux0, out = out[0], out = inPrev0);
    DFF(in = outMux1, out = out[1], out = inPrev1);
    DFF(in = outMux2, out = out[2], out = inPrev2);
    DFF(in = outMux3, out = out[3], out = inPrev3);
    DFF(in = outMux4, out = out[4], out = inPrev4);
    DFF(in = outMux5, out = out[5], out = inPrev5);
    DFF(in = outMux6, out = out[6], out = inPrev6);
    DFF(in = outMux7, out = out[7], out = inPrev7);
    DFF(in = outMux8, out = out[8], out = inPrev8);
    DFF(in = outMux9, out = out[9], out = inPrev9);
    DFF(in = outMux10, out = out[10], out = inPrev10);
    DFF(in = outMux11, out = out[11], out = inPrev11);
    DFF(in = outMux12, out = out[12], out = inPrev12);
    DFF(in = outMux13, out = out[13], out = inPrev13);
    DFF(in = outMux14, out = out[14], out = inPrev14);
    DFF(in = outMux15, out = out[15], out = inPrev15);
}
